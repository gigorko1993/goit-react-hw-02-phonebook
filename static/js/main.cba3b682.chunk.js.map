{"version":3,"sources":["ContactForm/ContactForm.js","Filter/Filter.js","ContactList/ContactItem/ContactItem.js","ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","onChange","e","setState","currentTarget","value","onSubmit","preventDefault","newContact","id","uuidv4","props","addContact","reset","this","type","pattern","title","required","Component","Filter","ContactItem","removeContact","contacts","map","onClick","ContactList","App","filter","undefined","find","prevState","alert","contact","lowerCasedFilter","toLowerCase","filteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cba3b682.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    this.props.addContact(newContact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            onChange={this.onChange}\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            onChange={this.onChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            value={this.state.number}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","const Filter = ({ onChange, value }) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Find contacts by name\r\n        <input name=\"filter\" type=\"text\" value={value} onChange={onChange} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","const ContactItem = ({ removeContact, contacts }) => {\r\n  return contacts.map(({ name, number, id }) => {\r\n    return (\r\n      <li key={id}>\r\n        {name}: {number}\r\n        <button onClick={() => removeContact(id)} type=\"button\">\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nexport default ContactItem;\r\n","import ContactItem from \"./ContactItem\";\r\n\r\nconst ContactList = ({ removeContact, contacts }) => {\r\n  return (\r\n    <ul>\r\n      <ContactItem removeContact={removeContact} contacts={contacts} />\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\n\nimport ContactForm from \"./ContactForm\";\nimport Filter from \"./Filter\";\nimport ContactList from \"./ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (newContact) => {\n    const contactPresenceCheck = this.state.contacts.find(\n      ({ name }) => name === newContact.name\n    );\n\n    if (contactPresenceCheck !== undefined) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n\n    this.setState((prevState) => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n\n  removeContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  onChange = (e) => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n\n  render() {\n    const lowerCasedFilter = this.state.filter.toLowerCase();\n    const filteredContacts = this.state.contacts.filter(({ name }) =>\n      name.toLowerCase().includes(lowerCasedFilter)\n    );\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.onChange} />\n        <ContactList\n          removeContact={this.removeContact}\n          contacts={filteredContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}